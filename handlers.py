from aiogram import types, F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State


import kb
import text
import db
import states as st

router = Router()


@router.message(Command("start"))
async def start_handler(msg: Message):
    await msg.answer(text.T_start.format(name=msg.from_user.full_name), reply_markup=kb.mainmenu)
    await db.registrate(msg.from_user.id, msg.from_user.username)


@router.message(F.text=="üìÑ –ò–Ω—Ñ–æ")
async def start_handler(msg: Message):
    await msg.answer("–∏–Ω—Ñ–æ")


@router.message(F.text=="‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å")
async def start_handler(msg: Message):
    id=msg.from_user.id
    if (await db.get_group(id)==None):
        await msg.answer(text.T_profile.format(name=msg.from_user.full_name, group="–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"), parse_mode=ParseMode.MARKDOWN_V2,reply_markup=kb.inl_setgroup)
    else:
        await msg.answer(text.T_profile.format(name=msg.from_user.full_name, group=await db.get_group(id)),
                         parse_mode=ParseMode.MARKDOWN_V2, reply_markup=kb.inl_setgroup)




@router.callback_query(F.data == "set_group_profile")
async def callback_handler(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã")
    await callback.answer()
    await state.set_state(st.SetGroup.start_write_group)

# STATE 1
@router.message(st.SetGroup.start_write_group)
async def set_group_start(msg: Message, state: FSMContext):
    await state.update_data(group=msg.text.lower())
    #–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á—Ç–æ –≥—Ä—É–ø–ø–∞ –µ—Å—Ç—å –≤ –±–¥
    id = msg.from_user.id
    user_data = await state.get_data()
    await db.set_group(id,user_data['group'])
    await state.clear()
    await msg.answer("–£—Å–ø–µ—à–Ω–æ")


@router.message(F.text=="üìä –î—Ä—É–≥–∞—è –≥—Ä—É–ø–ø–∞")
async def start_handler(msg: Message):
    await msg.answer("–∏–Ω—Ñ–æ")


@router.message(F.text=="üìÖ –ú–æ–µ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def start_handler(msg: Message):
    await msg.answer("–∏–Ω—Ñ–æ")


@router.message()
async def start_handler(msg: Message):
    await msg.answer("–ù–µ –ø–æ–Ω—è–ª -_-")
